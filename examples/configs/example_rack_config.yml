#** *****************************************************************************
# *
# * If not stated otherwise in this file or this component's LICENSE file the
# * following copyright and licenses apply:
# *
# * Copyright 2023 RDK Management
# *
# * Licensed under the Apache License, Version 2.0 (the "License");
# * you may not use this file except in compliance with the License.
# * You may obtain a copy of the License at
# *
# *
# http://www.apache.org/licenses/LICENSE-2.0
# *
# * Unless required by applicable law or agreed to in writing, software
# * distributed under the License is distributed on an "AS IS" BASIS,
# * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# * See the License for the specific language governing permissions and
# * limitations under the License.
# *
#* ******************************************************************************

# This config file creates your environment, defaults are setup internally unless otherwise overridden.
# you will need at least 1 rack and 1 slot to operate.
# Each optional module will be off by default unless otherwise stated.
# Uncomment and fill out the sections for the modules you require.

# Data that is global to all tests.
globalConfig:
    includes:
        deviceConfig: "example_device_config.yml"
    # [capture: optional] - This section is required for use with the videoCapture module.
        # [ocrEnginePath: "/usr/bin/tesseract"] # "C:\\Program Files\\Tesseract-OCR\\tesseract.exe" (For Windows) - tesseract binary
        # [resolution: "1080p"] - Capture resolution
        # [input: 0] - which input is connected to the video path
        # Note: Video capture will not be installed unless screenRegions: is defined in deviceConfig:
    local:
        log:                # log for each slot
            directory: "./logs"
            delimiter: "/"

# Define racks, their slots and the devices in them. These are not always physical racks and slots.
rackConfig:
    rack1:
        name: "rack1"
        description: "example config at my desk"
        slot1:
            # [ name: "required", description: "optional"]
            name: "slot1"
            devices:
                - dut:
                    ip: "127.0.0.1"  # IP Address of the ADA Hub
                    description: "local PC"
                    platform: "linux PC"
                    consoles:
                        # - [ name ] - consoles should be listed here with a name. Defined as one of the types below.
                            # supported types:
                            # [ type: "serial", port: "COM7", baudRate: "(default)115200", dataBits: "optional(8)", stopBits: "optional(1)", parity: "optional(None)", FlowControl: "optional(None)", ]
                            # [ type: "ssh", port: 22, username: "test", password: "test" ]
                            # [ type: "telnet", port: 23, username: "test", password: "test" ]
                        - default:
                            type: "serial"
                            port: "/dev/ttyUSB0"
                        - ssh:
                            port: 22
                            username: "root"
                            ip: "192.168.99.1"

                    # [ remoteController: optional ] - This section is required for use with the remoteController module.
                        # supported types:
                        # [ type: "olimex", ip: "192.168.0.17", port: 7, map: "llama_rc6", config: "remote_commander.yml" ]
                        # [ type: "skyProc", map: "skyq_map", config: "remote_commander.yml" ]
                        # [ type: "None" ]
                        # To use keySimulator RDK Middleware is required
                        # [ type: "keySimulator", ip: "192.168.50.99", port: 10022, username: "root", password: '', map: "keysimulator_rdk", config: "rdk_keymap.yml" ]

                    # [ outbound: optional ] - This section is used to configure paths for downloads and uploads from your test
                        # supported usage:
                        # [download_url: "url" ] - download location for the CPE device
                        # [ upload_url: "url" ] - upload location
                        # [ upload_url_base_dir: "url" ] - alternative upload location
                        # [ httpProxy: "uri" ] - Local Proxy if required
                        # [ workspaceDirectory: "path to directory on host" ] - Local working directory

                    # [ powerSwitch: optional ] - Power switch for the slot
                        # supported types, if this section is undefined this is ok
                        # [type: "orvbioS20", ip: "", mac: "", port:"optional", relay:"optional"]
                        # [type: "kasa", ip: "", options:"--plug" ] #  <- Plug
                        # [type: "kasa", ip: "", options:"--strip", args:'--index 2' ] # <- Power Strip
                        # [tyep: "tapo", ip: "", username: "optional", password: "optional", outlet: "optional"]
                        # [type: "hs100", ip:"", port:"optional" ]  kara also supports hs100
                        # [type: "apc", ip:"", username:"", password:"" ]  rack apc switch
                        # [type: "olimex", ip:"", port:"optional", relay:""  ]  
                        # [type: "SLP", ip:"", username: "", password: "", outlet_id:"", port:"optional"]
                        # [type: "none" ] if section doesn't exist then type:none will be used

                    # [ hdmiCECController: optional ] - Specific hdmiCECController for the slot
                        # supported types:
                        # [type: "cec-client", adaptor: "/dev/ttycec"]
                        # [type: "remote-cec-client", adaptor: "/dev/ttycec", address: "192.168.99.1", username(optional): "testuser", password(optional): "testpswd", port(optional): "22"]
                - pi2:
                    ip: "192.168.99.1"
                    description: "local pi4"
                    platform: "pi4"
                    consoles:
                        - ssh:
                            type: "ssh"
                            port: 22
                            username: "root"


